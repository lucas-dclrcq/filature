name: Create Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Set up JDK 22
        uses: actions/setup-java@v4
        with:
          java-version: '22'
          distribution: 'temurin'

      - name: Native build with Maven
        run: mvn --batch-mode --update-snapshots package -Pnative

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3

      - name: Login to GHCR
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push native version
        id: docker_build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
        with:
          context: .
          file: src/main/docker/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/filature:v${{ steps.get_version.outputs.VERSION }}

      - name: Build and push jvm version
        id: docker_build_jvm
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
        with:
          context: .
          file: src/main/docker/Dockerfile.jvm
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/filature:v${{ steps.get_version.outputs.VERSION }}-jvm
        
      - name: Extract changelog
        id: extract_changelog
        run: |
          # Extract the section for the current version from CHANGELOG.md
          VERSION=${{ steps.get_version.outputs.VERSION }}
          # Look for the section with the current version
          SECTION=$(awk -v ver="$VERSION" '/^## [0-9]+\.[0-9]+\.[0-9]+/ {if (p) { exit }; if ($2 == ver) { p=1 }; next} p { print }' CHANGELOG.md | sed '/^## /,$d')
          
          # If nothing found, try without the leading 'v'
          if [ -z "$SECTION" ]; then
            SECTION=$(awk -v ver="$VERSION" '/^## [0-9]+\.[0-9]+\.[0-9]+ -/ {if (p) { exit }; if ($2 == ver) { p=1 }; next} p { print }' CHANGELOG.md | sed '/^## /,$d')
          fi
          
          # Format for GitHub release
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          echo "$SECTION" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release v${{ steps.get_version.outputs.VERSION }}
          body: ${{ steps.extract_changelog.outputs.CHANGELOG }}
          draft: false
          prerelease: false