/**
 * Generated by orval v7.8.0 🍺
 * Do not edit manually.
 * filature API
 * OpenAPI spec version: 1.0-SNAPSHOT
 */
import * as axios from "axios";
import type { AxiosRequestConfig, AxiosResponse } from "axios";

import type {
  ConnectionCreationRequest,
  ConnectionSummary,
  EnercoopSourceCreationRequest,
  EnercoopSourceSummary,
  EnercoopSourceUpdateRequest,
  NextcloudTargetCreationRequest,
  NextcloudTargetSummary,
  NextcloudTargetUpdateRequest,
  SourceSummary,
  SynchronizationSummary,
  TargetSummary,
} from "../model";

export const getFilatureAPI = () => {
  /**
   * @summary List Connections
   */
  const getApiConnections = <TData = AxiosResponse<ConnectionSummary[]>>(
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default.get(`http://localhost:8080/api/connections`, options);
  };

  /**
   * @summary Create Connection
   */
  const postApiConnections = <TData = AxiosResponse<void>>(
    connectionCreationRequest: ConnectionCreationRequest,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default.post(
      `http://localhost:8080/api/connections`,
      connectionCreationRequest,
      options,
    );
  };

  /**
   * @summary Synchronize All For User
   */
  const postApiConnectionsSynchronize = <TData = AxiosResponse<void>>(
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default.post(
      `http://localhost:8080/api/connections/synchronize`,
      undefined,
      options,
    );
  };

  /**
   * @summary Synchronize Now
   */
  const postApiConnectionsConnectionIdSynchronize = <
    TData = AxiosResponse<void>,
  >(
    connectionId: number,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default.post(
      `http://localhost:8080/api/connections/${connectionId}/synchronize`,
      undefined,
      options,
    );
  };

  /**
   * @summary Get Connection
   */
  const getApiConnectionsId = <TData = AxiosResponse<ConnectionSummary>>(
    id: number,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:8080/api/connections/${id}`,
      options,
    );
  };

  /**
   * @summary Delete Connection
   */
  const deleteApiConnectionsId = <TData = AxiosResponse<void>>(
    id: number,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default.delete(
      `http://localhost:8080/api/connections/${id}`,
      options,
    );
  };

  /**
   * @summary List Sources
   */
  const getApiSources = <TData = AxiosResponse<SourceSummary[]>>(
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default.get(`http://localhost:8080/api/sources`, options);
  };

  /**
   * @summary Create Enercoop Source
   */
  const postApiSourcesEnercoop = <TData = AxiosResponse<void>>(
    enercoopSourceCreationRequest: EnercoopSourceCreationRequest,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default.post(
      `http://localhost:8080/api/sources/enercoop`,
      enercoopSourceCreationRequest,
      options,
    );
  };

  /**
   * @summary Update Enercoop Source
   */
  const putApiSourcesEnercoopId = <TData = AxiosResponse<void>>(
    id: number,
    enercoopSourceUpdateRequest: EnercoopSourceUpdateRequest,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default.put(
      `http://localhost:8080/api/sources/enercoop/${id}`,
      enercoopSourceUpdateRequest,
      options,
    );
  };

  /**
   * @summary Get Enercoop Source
   */
  const getApiSourcesEnercoopId = <
    TData = AxiosResponse<EnercoopSourceSummary>,
  >(
    id: number,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:8080/api/sources/enercoop/${id}`,
      options,
    );
  };

  /**
   * @summary Delete Source
   */
  const deleteApiSourcesEnercoopId = <TData = AxiosResponse<void>>(
    id: number,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default.delete(
      `http://localhost:8080/api/sources/enercoop/${id}`,
      options,
    );
  };

  /**
   * @summary List Synchronizations
   */
  const getApiSynchronizations = <
    TData = AxiosResponse<SynchronizationSummary[]>,
  >(
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:8080/api/synchronizations`,
      options,
    );
  };

  /**
   * @summary List Targets
   */
  const getApiTargets = <TData = AxiosResponse<TargetSummary[]>>(
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default.get(`http://localhost:8080/api/targets`, options);
  };

  /**
   * @summary Create Nextcloud Target
   */
  const postApiTargetsNextcloud = <TData = AxiosResponse<void>>(
    nextcloudTargetCreationRequest: NextcloudTargetCreationRequest,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default.post(
      `http://localhost:8080/api/targets/nextcloud`,
      nextcloudTargetCreationRequest,
      options,
    );
  };

  /**
   * @summary Update Nextcloud Target
   */
  const putApiTargetsNextcloudId = <TData = AxiosResponse<void>>(
    id: number,
    nextcloudTargetUpdateRequest: NextcloudTargetUpdateRequest,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default.put(
      `http://localhost:8080/api/targets/nextcloud/${id}`,
      nextcloudTargetUpdateRequest,
      options,
    );
  };

  /**
   * @summary Get Nextcloud Target
   */
  const getApiTargetsNextcloudId = <
    TData = AxiosResponse<NextcloudTargetSummary>,
  >(
    id: number,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:8080/api/targets/nextcloud/${id}`,
      options,
    );
  };

  /**
   * @summary Delete Nextcloud Target
   */
  const deleteApiTargetsNextcloudId = <TData = AxiosResponse<void>>(
    id: number,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default.delete(
      `http://localhost:8080/api/targets/nextcloud/${id}`,
      options,
    );
  };

  /**
   * @summary Get Target
   */
  const getApiTargetsId = <TData = AxiosResponse<TargetSummary>>(
    id: number,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:8080/api/targets/${id}`,
      options,
    );
  };

  /**
   * @summary Delete Target
   */
  const deleteApiTargetsId = <TData = AxiosResponse<void>>(
    id: number,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default.delete(
      `http://localhost:8080/api/targets/${id}`,
      options,
    );
  };

  return {
    getApiConnections,
    postApiConnections,
    postApiConnectionsSynchronize,
    postApiConnectionsConnectionIdSynchronize,
    getApiConnectionsId,
    deleteApiConnectionsId,
    getApiSources,
    postApiSourcesEnercoop,
    putApiSourcesEnercoopId,
    getApiSourcesEnercoopId,
    deleteApiSourcesEnercoopId,
    getApiSynchronizations,
    getApiTargets,
    postApiTargetsNextcloud,
    putApiTargetsNextcloudId,
    getApiTargetsNextcloudId,
    deleteApiTargetsNextcloudId,
    getApiTargetsId,
    deleteApiTargetsId,
  };
};
export type GetApiConnectionsResult = AxiosResponse<ConnectionSummary[]>;
export type PostApiConnectionsResult = AxiosResponse<void>;
export type PostApiConnectionsSynchronizeResult = AxiosResponse<void>;
export type PostApiConnectionsConnectionIdSynchronizeResult =
  AxiosResponse<void>;
export type GetApiConnectionsIdResult = AxiosResponse<ConnectionSummary>;
export type DeleteApiConnectionsIdResult = AxiosResponse<void>;
export type GetApiSourcesResult = AxiosResponse<SourceSummary[]>;
export type PostApiSourcesEnercoopResult = AxiosResponse<void>;
export type PutApiSourcesEnercoopIdResult = AxiosResponse<void>;
export type GetApiSourcesEnercoopIdResult =
  AxiosResponse<EnercoopSourceSummary>;
export type DeleteApiSourcesEnercoopIdResult = AxiosResponse<void>;
export type GetApiSynchronizationsResult = AxiosResponse<
  SynchronizationSummary[]
>;
export type GetApiTargetsResult = AxiosResponse<TargetSummary[]>;
export type PostApiTargetsNextcloudResult = AxiosResponse<void>;
export type PutApiTargetsNextcloudIdResult = AxiosResponse<void>;
export type GetApiTargetsNextcloudIdResult =
  AxiosResponse<NextcloudTargetSummary>;
export type DeleteApiTargetsNextcloudIdResult = AxiosResponse<void>;
export type GetApiTargetsIdResult = AxiosResponse<TargetSummary>;
export type DeleteApiTargetsIdResult = AxiosResponse<void>;
